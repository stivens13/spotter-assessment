services:
  spotter-api:
    build:
      context: .
      dockerfile: services/spotter-api/Dockerfile
    container_name: spotter 
    hostname: spotter
    env_file:
    - configs/postgres.env
    - configs/youtube-api.env
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend-network  
    healthcheck:
      test: curl --fail -s http://localhost:8080/health || exit 1
      interval: 2s
      timeout: 5s
      retries: 15
  youtube-api:
    build:
      context: .
      dockerfile: services/youtube-api/Dockerfile
    container_name: youtube 
    hostname: youtube 
    ports:
      - "9000:9000"
    networks:
      - backend-network  
    healthcheck:
      test: curl --fail -s http://localhost:9000/health || exit 1
      interval: 2s
      timeout: 5s
      retries: 15
  etl:
    build:
      context: .
      dockerfile: services/etl/Dockerfile
    container_name: etl
    env_file:
      - configs/etl.env
      - configs/youtube-api.env
      - configs/spotter.env
    networks:
      - backend-network
    depends_on:
      postgres:
        condition: service_healthy      
      youtube-api:
        condition: service_healthy
    # command: sleep infinity
  postgres:
    container_name: postgres
    image: postgres:16.4-alpine
    env_file:
    - configs/postgres.env
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      # Data persistance is disabled to enable clean db startup and perfect reproducibility
      # To enable data persistance, uncomment the following line
      # - ./data/postgres:/var/lib/postgresql/data
      - ./migrations/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'"]
      interval: 2s
      timeout: 5s
      retries: 5

volumes:  
  pgdata: {}

networks:
  backend-network:
    driver: bridge